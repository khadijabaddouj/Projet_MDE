package json.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.EnumerationDescriptor;
import jetbrains.mps.smodel.runtime.ConstrainedStringDatatypeDescriptor;
import jetbrains.mps.smodel.runtime.ConstrainedStringDatatypeDescriptorImpl;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import jetbrains.mps.smodel.runtime.DataTypeDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptEntity = createDescriptorForEntity();
  /*package*/ final ConceptDescriptor myConceptattribute = createDescriptorForattribute();
  /*package*/ final ConceptDescriptor myConceptconf = createDescriptorForconf();
  /*package*/ final ConceptDescriptor myConceptfile = createDescriptorForfile();
  /*package*/ final EnumerationDescriptor myEnumerationapplicationType = new EnumerationDescriptor_applicationType();
  /*package*/ final EnumerationDescriptor myEnumerationattribute_types = new EnumerationDescriptor_attribute_types();
  /*package*/ final ConstrainedStringDatatypeDescriptor myCSDatatypeentity_name = new ConstrainedStringDatatypeDescriptorImpl(0x52d66a050b8e4c9cL, 0xa51ced22033bbbf3L, 0x11299d5d78093682L, "entity_name", "r:d7a2d3ee-8e24-49f3-b446-7a6ae06181e3(json.structure)/1236692597461300866", "[A-Z][a-z]*");
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptEntity, myConceptattribute, myConceptconf, myConceptfile);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.Entity:
        return myConceptEntity;
      case LanguageConceptSwitch.attribute:
        return myConceptattribute;
      case LanguageConceptSwitch.conf:
        return myConceptconf;
      case LanguageConceptSwitch.file:
        return myConceptfile;
      default:
        return null;
    }
  }

  @Override
  public Collection<DataTypeDescriptor> getDataTypeDescriptors() {
    return Arrays.asList(myEnumerationapplicationType, myEnumerationattribute_types, myCSDatatypeentity_name);
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForEntity() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("json", "Entity", 0x52d66a050b8e4c9cL, 0xa51ced22033bbbf3L, 0x70721ca2c0e9f556L);
    b.class_(false, false, false);
    b.origin("r:d7a2d3ee-8e24-49f3-b446-7a6ae06181e3(json.structure)/8102570164939781462");
    b.version(3);
    b.property("name", 0x70721ca2c0e9f87dL).type(MetaIdFactory.dataTypeId(0x52d66a050b8e4c9cL, 0xa51ced22033bbbf3L, 0x11299d5d78093682L)).origin("8102570164939782269").done();
    b.aggregate("attribute", 0x70721ca2c0eb6808L).target(0x52d66a050b8e4c9cL, 0xa51ced22033bbbf3L, 0x70721ca2c0eb538eL).optional(true).ordered(true).multiple(true).origin("8102570164939876360").done();
    b.alias("entity");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForattribute() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("json", "attribute", 0x52d66a050b8e4c9cL, 0xa51ced22033bbbf3L, 0x70721ca2c0eb538eL);
    b.class_(false, false, false);
    b.origin("r:d7a2d3ee-8e24-49f3-b446-7a6ae06181e3(json.structure)/8102570164939871118");
    b.version(3);
    b.property("name", 0x70721ca2c0eb5563L).type(PrimitiveTypeId.STRING).origin("8102570164939871587").done();
    b.property("type", 0x70721ca2c0eb5739L).type(MetaIdFactory.dataTypeId(0x52d66a050b8e4c9cL, 0xa51ced22033bbbf3L, 0x11299d5d7809625cL)).origin("8102570164939872057").done();
    b.property("proprity", 0x70721ca2c0eb59fbL).type(PrimitiveTypeId.STRING).origin("8102570164939872763").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForconf() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("json", "conf", 0x52d66a050b8e4c9cL, 0xa51ced22033bbbf3L, 0x70721ca2c0df58f4L);
    b.class_(false, false, false);
    b.origin("r:d7a2d3ee-8e24-49f3-b446-7a6ae06181e3(json.structure)/8102570164939086068");
    b.version(3);
    b.property("baseName", 0x70721ca2c0df59c5L).type(PrimitiveTypeId.STRING).origin("8102570164939086277").done();
    b.property("applicationType", 0x70721ca2c0df5c37L).type(MetaIdFactory.dataTypeId(0x52d66a050b8e4c9cL, 0xa51ced22033bbbf3L, 0x70721ca2c0e7812dL)).origin("8102570164939086903").done();
    b.property("packageName", 0x70721ca2c0df6098L).type(PrimitiveTypeId.STRING).origin("8102570164939088024").done();
    b.property("authenticationType", 0x70721ca2c0df65caL).type(PrimitiveTypeId.STRING).origin("8102570164939089354").done();
    b.property("prodDatabaseType", 0x70721ca2c0df6b99L).type(PrimitiveTypeId.STRING).origin("8102570164939090841").done();
    b.property("clientFramework", 0x70721ca2c0df7239L).type(PrimitiveTypeId.STRING).origin("8102570164939092537").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForfile() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("json", "file", 0x52d66a050b8e4c9cL, 0xa51ced22033bbbf3L, 0x70721ca2c0d57be4L);
    b.class_(false, false, true);
    b.origin("r:d7a2d3ee-8e24-49f3-b446-7a6ae06181e3(json.structure)/8102570164938439652");
    b.version(3);
    b.aggregate("conf", 0x70721ca2c0df78f4L).target(0x52d66a050b8e4c9cL, 0xa51ced22033bbbf3L, 0x70721ca2c0df58f4L).optional(true).ordered(true).multiple(false).origin("8102570164939094260").done();
    b.aggregate("entity", 0x70721ca2c0e9fe18L).target(0x52d66a050b8e4c9cL, 0xa51ced22033bbbf3L, 0x70721ca2c0e9f556L).optional(true).ordered(true).multiple(true).origin("8102570164939783704").done();
    return b.create();
  }
}
