package json.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.EnumerationDescriptorBase;
import jetbrains.mps.smodel.runtime.EnumerationDescriptor;
import jetbrains.mps.lang.smodel.EnumerationLiteralsIndex;
import java.util.List;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;

public class EnumerationDescriptor_relationship_types extends EnumerationDescriptorBase {

  public EnumerationDescriptor_relationship_types() {
    super(0x52d66a050b8e4c9cL, 0xa51ced22033bbbf3L, 0xae19d5f4fa4b4adL, "relationship_types", "r:d7a2d3ee-8e24-49f3-b446-7a6ae06181e3(json.structure)/784080842822825133");
  }

  private final EnumerationDescriptor.MemberDescriptor myMember_OneToOne_0 = new EnumerationDescriptor.MemberDescriptor("OneToOne", "OneToOne", 0xae19d5f4fa4b4aeL, "r:d7a2d3ee-8e24-49f3-b446-7a6ae06181e3(json.structure)/784080842822825134");
  private final EnumerationDescriptor.MemberDescriptor myMember_OneToMany_0 = new EnumerationDescriptor.MemberDescriptor("OneToMany", "OneToMany", 0xae19d5f4fa4b4b0L, "r:d7a2d3ee-8e24-49f3-b446-7a6ae06181e3(json.structure)/784080842822825136");
  private final EnumerationDescriptor.MemberDescriptor myMember_ManyToOne_0 = new EnumerationDescriptor.MemberDescriptor("ManyToOne", "ManyToOne ", 0xae19d5f4fa4b4b5L, "r:d7a2d3ee-8e24-49f3-b446-7a6ae06181e3(json.structure)/784080842822825141");
  private final EnumerationDescriptor.MemberDescriptor myMember_ManyToMany_0 = new EnumerationDescriptor.MemberDescriptor("ManyToMany", "ManyToMany", 0xae19d5f4fa4b4baL, "r:d7a2d3ee-8e24-49f3-b446-7a6ae06181e3(json.structure)/784080842822825146");

  private final EnumerationLiteralsIndex myIndex = EnumerationLiteralsIndex.build(0x52d66a050b8e4c9cL, 0xa51ced22033bbbf3L, 0xae19d5f4fa4b4adL, 0xae19d5f4fa4b4aeL, 0xae19d5f4fa4b4b0L, 0xae19d5f4fa4b4b5L, 0xae19d5f4fa4b4baL);
  private final List<EnumerationDescriptor.MemberDescriptor> myMembers = new EnumerationDescriptorBase.MembersList(myIndex, myMember_OneToOne_0, myMember_OneToMany_0, myMember_ManyToOne_0, myMember_ManyToMany_0);

  @Nullable
  @Override
  public EnumerationDescriptor.MemberDescriptor getDefault() {
    return null;
  }

  @NotNull
  @Override
  public List<EnumerationDescriptor.MemberDescriptor> getMembers() {
    return myMembers;
  }

  @Nullable
  @Override
  public EnumerationDescriptor.MemberDescriptor getMember(@Nullable String memberName) {
    if (memberName == null) {
      return null;
    }
    switch (memberName) {
      case "OneToOne":
        return myMember_OneToOne_0;
      case "OneToMany":
        return myMember_OneToMany_0;
      case "ManyToOne":
        return myMember_ManyToOne_0;
      case "ManyToMany":
        return myMember_ManyToMany_0;
    }
    return null;
  }

  @Nullable
  @Override
  public EnumerationDescriptor.MemberDescriptor getMember(long idValue) {
    int index = myIndex.index(idValue);
    if (index == -1) {
      return null;
    }
    return myMembers.get(index);
  }
}
