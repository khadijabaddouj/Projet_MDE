package jdl.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.EnumerationDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import jetbrains.mps.smodel.runtime.DataTypeDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptEntity = createDescriptorForEntity();
  /*package*/ final ConceptDescriptor myConceptapplication = createDescriptorForapplication();
  /*package*/ final ConceptDescriptor myConceptconfig = createDescriptorForconfig();
  /*package*/ final EnumerationDescriptor myEnumerationapplicationType = new EnumerationDescriptor_applicationType();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptEntity, myConceptapplication, myConceptconfig);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.Entity:
        return myConceptEntity;
      case LanguageConceptSwitch.application:
        return myConceptapplication;
      case LanguageConceptSwitch.config:
        return myConceptconfig;
      default:
        return null;
    }
  }

  @Override
  public Collection<DataTypeDescriptor> getDataTypeDescriptors() {
    return Arrays.asList(myEnumerationapplicationType);
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForEntity() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jdl", "Entity", 0x766c9d72d59e4ba7L, 0xa509f4dfc71d899eL, 0x70721ca2c0e819a0L);
    b.class_(false, false, false);
    b.origin("r:4a560747-7167-4c14-b84b-2a0ec87deb14(jdl.structure)/8102570164939659680");
    b.version(3);
    b.property("name", 0x70721ca2c0e81e4fL).type(PrimitiveTypeId.STRING).origin("8102570164939660879").done();
    b.property("body", 0x70721ca2c0e836b2L).type(PrimitiveTypeId.STRING).origin("8102570164939667122").done();
    b.alias("entity");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForapplication() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jdl", "application", 0x766c9d72d59e4ba7L, 0xa509f4dfc71d899eL, 0x70721ca2c0d8934cL);
    b.class_(false, false, true);
    b.origin("r:4a560747-7167-4c14-b84b-2a0ec87deb14(jdl.structure)/8102570164938642252");
    b.version(3);
    b.aggregate("config", 0x70721ca2c0d97300L).target(0x766c9d72d59e4ba7L, 0xa509f4dfc71d899eL, 0x70721ca2c0d7e0e3L).optional(true).ordered(true).multiple(true).origin("8102570164938699520").done();
    b.aggregate("entity", 0x70721ca2c0e86127L).target(0x766c9d72d59e4ba7L, 0xa509f4dfc71d899eL, 0x70721ca2c0e819a0L).optional(true).ordered(true).multiple(true).origin("8102570164939677991").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForconfig() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("jdl", "config", 0x766c9d72d59e4ba7L, 0xa509f4dfc71d899eL, 0x70721ca2c0d7e0e3L);
    b.class_(false, false, false);
    b.origin("r:4a560747-7167-4c14-b84b-2a0ec87deb14(jdl.structure)/8102570164938596579");
    b.version(3);
    b.property("baseName", 0x70721ca2c0d7e2d3L).type(PrimitiveTypeId.STRING).origin("8102570164938597075").done();
    b.property("applicationType", 0x70721ca2c0d7e45bL).type(MetaIdFactory.dataTypeId(0x766c9d72d59e4ba7L, 0xa509f4dfc71d899eL, 0x70721ca2c0d822c4L)).origin("8102570164938597467").done();
    b.property("packageName", 0x70721ca2c0d7e64dL).type(PrimitiveTypeId.STRING).origin("8102570164938597965").done();
    b.property("authenticationType", 0x70721ca2c0d7e85bL).type(PrimitiveTypeId.STRING).origin("8102570164938598491").done();
    b.property("prodDatabaseType", 0x70721ca2c0d7e9b2L).type(PrimitiveTypeId.STRING).origin("8102570164938598834").done();
    b.property("clientFramework", 0x70721ca2c0d7eb0bL).type(PrimitiveTypeId.STRING).origin("8102570164938599179").done();
    b.alias("config");
    return b.create();
  }
}
